import{j as a}from"./jsx-runtime-Du8NFWEI.js";import{R as l}from"./index-Dl6G-zuu.js";import{t as g,ao as j,e as x,i as q,ap as _}from"./index-CKGhC0Va.js";import{L as V,D,a as z}from"./Field-COFLQSMM.js";import{f as S,a as L}from"./utils-D1ukYlRK.js";import{c as B}from"./createLucideIcon-Dov-y89W.js";import{C as G}from"./check-D2t0c9Mn.js";const U=B("Minus",[["path",{d:"M5 12h14",key:"1ays0h"}]]),C=l.createContext({}),$=()=>l.useContext(C);function K({label:e,presets:r,...t}){const[i,u]=l.useState(!1),[k,f]=l.useState(!1),[p,w]=l.useState([]),[v,E]=l.useState([]),[H,N]=l.useState(!1),[c,P]=l.useState([]),[s,o]=l.useState([]),A=()=>{const n=[];r.forEach(d=>{d.value.split(",").every(W=>s.includes(W.trim()))&&n.push(d.value)}),E(n)};l.useEffect(()=>{A(),N(s.length>0&&s.length<c.length),f(s.length===c.length)},[s]),l.useEffect(()=>{o([...new Set([...p.map(n=>n.split(",").map(d=>d.trim())).flat()])])},[p]),l.useEffect(()=>{o(i?c:[])},[i]);const R=l.useCallback(n=>P(d=>[...new Set([...d,n])]),[]),T=l.useMemo(()=>({addItem:R}),[]),I=n=>{u(n),f(n),o(n?c:[])},{base:M,label:F}=S(),b=l.useMemo(()=>a.jsx(m,{value:v,onChange:w,orientation:t.orientation,className:"w-full",children:r&&r.map(n=>a.jsx(h,{value:n.value,children:n.label}))}),[v,t.orientation]);return a.jsxs("div",{className:g(M({labelPosition:t.labelPosition||"top",labelAlign:t.labelAlign||"start"}),t.className,"gap-4 rounded-lg border border-gray-500 p-6"),children:[a.jsxs("div",{className:"flex w-1/3 flex-col gap-4",children:[a.jsx(V,{className:F({isRequired:t.isRequired,isDisabled:t.isDisabled}),children:e}),a.jsx(h,{isSelected:k,isIndeterminate:H,onChange:I,children:"All"}),t.labelPosition==="side"&&b]}),a.jsx(C.Provider,{value:T,children:a.jsx(m,{value:s,onChange:o,...t,className:"rounded border border-gray-300 p-4 dark:border-zinc-500 forced-colors:border-[ButtonBorder]",children:t.children})}),t.labelPosition!=="side"&&b]})}const le=l.forwardRef(K);function m(e){const{base:r,label:t}=S();return a.jsxs(j,{...e,className:x(e.className,(i,u)=>r({labelAlign:e.labelAlign||"start",labelPosition:e.labelPosition||"top",orientation:e.orientation||"vertical",...u,className:i})),children:[e.label&&a.jsx(V,{className:t({isRequired:e.isRequired,isDisabled:e.isDisabled}),children:e.label}),a.jsxs("div",{className:g("flex w-full flex-1 flex-wrap gap-1",e.orientation==="horizontal"?"[&_label]:mr-5":"flex-col"),children:[e.children,e.description&&a.jsx(D,{children:e.description}),a.jsx(z,{children:e.errorMessage})]})]})}const O=q({base:"flex gap-2 items-center group text-sm transition",variants:{isDisabled:{false:"text-gray-800 dark:text-zinc-200",true:"text-gray-300 dark:text-zinc-600 forced-colors:text-[GrayText]"}}}),J=q({extend:L,base:"w-5 h-5 flex-shrink-0 rounded flex items-center justify-center border-2 outline-offset-2 transition",variants:{isSelected:{false:"bg-white dark:bg-zinc-900 border-[--color] [--color:theme(colors.gray.400)] dark:[--color:colors.zinc-400)] group-pressed:[--color:theme(colors.gray.500)] dark:group-pressed:[--color:theme(colors.zinc.300)]",true:"bg-[--color] border-[--color] [--color:theme(colors.gray.700)] group-pressed:[--color:theme(colors.gray.800)] dark:[--color:theme(colors.slate.300)] dark:group-pressed:[--color:theme(colors.slate.200)] forced-colors:![--color:Highlight]"},isInvalid:{true:"[--color:theme(colors.red.700)] dark:[--color:theme(colors.red.600)] forced-colors:![--color:Mark] group-pressed:[--color:theme(colors.red.800)] dark:group-pressed:[--color:theme(colors.red.700)]"},isDisabled:{true:"[--color:theme(colors.gray.200)] dark:[--color:theme(colors.zinc.700)] forced-colors:![--color:GrayText]"}}}),y="w-4 h-4 text-white group-disabled:text-gray-400 dark:text-slate-900 dark:group-disabled:text-slate-600 forced-colors:text-[HighlightText]";function h(e){const{addItem:r}=$();return l.useEffect(()=>{r==null||r(e.value)},[]),a.jsx(_,{...e,className:x(e.className,(t,i)=>O({...i,className:t})),children:({isSelected:t,isIndeterminate:i,...u})=>a.jsxs(a.Fragment,{children:[a.jsx("div",{className:J({isSelected:t||i,...u}),children:i?a.jsx(U,{"aria-hidden":!0,className:y}):t?a.jsx(G,{"aria-hidden":!0,className:y}):null}),e.children]})})}try{m.displayName="CheckboxGroup",m.__docgenInfo={description:"",displayName:"CheckboxGroup",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},labelAlign:{defaultValue:null,description:"",name:"labelAlign",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"end"'}]}},labelPosition:{defaultValue:null,description:"",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"side"'}]}},orientation:{defaultValue:null,description:"",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},errorMessage:{defaultValue:null,description:"",name:"errorMessage",required:!1,type:{name:"string | ((validation: ValidationResult) => string)"}},value:{defaultValue:null,description:"The current value (controlled).",name:"value",required:!1,type:{name:"string[]"}},isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:"enum",value:[{value:'"native"'},{value:'"aria"'}]}},defaultValue:{defaultValue:null,description:"The default value (uncontrolled).",name:"defaultValue",required:!1,type:{name:"string[]"}},onChange:{defaultValue:null,description:"Handler that is called when the value changes.",name:"onChange",required:!1,type:{name:"(value: string[]) => void"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"name",required:!1,type:{name:"string"}},isRequired:{defaultValue:null,description:"Whether user input is required on the input before form submission.",name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"(value: string[]) => true | ValidationError"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: CheckboxGroupRenderProps) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: CheckboxGroupRenderProps) => CSSProperties)"}}}}}catch{}try{h.displayName="Checkbox",h.__docgenInfo={description:"",displayName:"Checkbox",props:{isIndeterminate:{defaultValue:null,description:`Indeterminism is presentational only.
The indeterminate visual representation remains regardless of user interaction.`,name:"isIndeterminate",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"The value of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue).",name:"value",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"(e: KeyboardEvent) => void"}},excludeFromTabOrder:{defaultValue:null,description:`Whether to exclude the element from the sequential tab order. If true,
the element will not be focusable via the keyboard by tabbing. This should
be avoided except in rare scenarios where an alternative means of accessing
the element or its functionality via the keyboard is available.`,name:"excludeFromTabOrder",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Handler that is called when the element's selection state changes.",name:"onChange",required:!1,type:{name:"(isSelected: boolean) => void"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"name",required:!1,type:{name:"string"}},isRequired:{defaultValue:null,description:"Whether user input is required on the input before form submission.",name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"(value: boolean) => true | ValidationError"}},defaultSelected:{defaultValue:null,description:"Whether the element should be selected (uncontrolled).",name:"defaultSelected",required:!1,type:{name:"boolean"}},isSelected:{defaultValue:null,description:"Whether the element should be selected (controlled).",name:"isSelected",required:!1,type:{name:"boolean"}},onHoverStart:{defaultValue:null,description:"Handler that is called when a hover interaction starts.",name:"onHoverStart",required:!1,type:{name:"(e: HoverEvent) => void"}},onHoverEnd:{defaultValue:null,description:"Handler that is called when a hover interaction ends.",name:"onHoverEnd",required:!1,type:{name:"(e: HoverEvent) => void"}},onHoverChange:{defaultValue:null,description:"Handler that is called when the hover state changes.",name:"onHoverChange",required:!1,type:{name:"(isHovering: boolean) => void"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:"enum",value:[{value:'"native"'},{value:'"aria"'}]}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: CheckboxRenderProps) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: CheckboxRenderProps) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: CheckboxRenderProps) => CSSProperties)"}}}}}catch{}export{h as C,le as _,m as a};
