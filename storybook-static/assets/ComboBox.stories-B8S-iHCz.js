import{a as o,I as T,l as N,j as e,o as W,$ as _}from"./utils-2ykXyvw8.js";import{B as V}from"./Button-DlFJnyHC.js";import{L as P,b as E,I as M,D as H,F as L}from"./Field-CfDsOgd5.js";import{D as A,b as k}from"./ListBox-ClXE9KHo.js";import{P as F}from"./Popover-D8rfK7t_.js";import{C as R}from"./chevron-down-DbyoNoN6.js";import"./index-CBqU2yxZ.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-BtM5VmRH.js";import"./check-yUcLlJWT.js";import"./createLucideIcon-DdzWpsi8.js";function s({label:a,description:u,errorMessage:S,children:w,items:q,...m}){return o(T,{...m,className:N(m.className,"group flex flex-col gap-1"),children:[e(P,{children:a}),o(E,{children:[e(M,{}),e(V,{variant:"icon",className:"w-6 mr-1 rounded outline-offset-0 ",children:e(R,{"aria-hidden":!0,className:"w-4 h-4"})})]}),u&&e(H,{children:u}),e(L,{children:S}),e(F,{className:"w-[--trigger-width]",children:e(W,{items:q,className:"outline-0 p-1 max-h-[inherit] overflow-auto [clip-path:inset(0_0_0_0_round_.75rem)]",children:w})})]})}function t(a){return e(A,{...a})}function d(a){return e(k,{...a})}try{s.displayName="ComboBox",s.__docgenInfo={description:"",displayName:"ComboBox",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},errorMessage:{defaultValue:null,description:"",name:"errorMessage",required:!1,type:{name:"string | ((validation: ValidationResult) => string)"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:"enum",value:[{value:'"native"'},{value:'"aria"'}]}},selectedKey:{defaultValue:null,description:"The currently selected key in the collection (controlled).",name:"selectedKey",required:!1,type:{name:"Key"}},defaultSelectedKey:{defaultValue:null,description:"The initial selected key in the collection (uncontrolled).",name:"defaultSelectedKey",required:!1,type:{name:"Key"}},onSelectionChange:{defaultValue:null,description:"Handler that is called when the selection changes.",name:"onSelectionChange",required:!1,type:{name:"(key: Key) => any"}},shouldFocusWrap:{defaultValue:null,description:"Whether keyboard navigation is circular.",name:"shouldFocusWrap",required:!1,type:{name:"boolean"}},defaultItems:{defaultValue:null,description:"The list of ComboBox items (uncontrolled).",name:"defaultItems",required:!1,type:{name:"Iterable<T>"}},items:{defaultValue:null,description:"The list of ComboBox items (controlled).",name:"items",required:!1,type:{name:"Iterable<T>"}},onOpenChange:{defaultValue:null,description:"Method that is called when the open state of the menu changes. Returns the new open state and the action that caused the opening of the menu.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean, menuTrigger?: MenuTriggerAction) => void"}},inputValue:{defaultValue:null,description:"The value of the ComboBox input (controlled).",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"The default value of the ComboBox input (uncontrolled).",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"Handler that is called when the ComboBox input value changes.",name:"onInputChange",required:!1,type:{name:"(value: string) => void"}},allowsCustomValue:{defaultValue:null,description:"Whether the ComboBox allows a non-item matching input value to be set.",name:"allowsCustomValue",required:!1,type:{name:"boolean"}},menuTrigger:{defaultValue:{value:"'input'"},description:"The interaction required to display the ComboBox menu.",name:"menuTrigger",required:!1,type:{name:"enum",value:[{value:'"focus"'},{value:'"input"'},{value:'"manual"'}]}},disabledKeys:{defaultValue:null,description:"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",name:"disabledKeys",required:!1,type:{name:"Iterable<Key>"}},isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Whether user input is required on the input before form submission.",name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"(value: ComboBoxValidationValue) => true | ValidationError"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<HTMLInputElement, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<HTMLInputElement, Element>) => void"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"(e: KeyboardEvent) => void"}},name:{defaultValue:null,description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"name",required:!1,type:{name:"string"}},defaultFilter:{defaultValue:null,description:"The filter function used to determine if a option should be included in the combo box list.",name:"defaultFilter",required:!1,type:{name:"(textValue: string, inputValue: string) => boolean"}},formValue:{defaultValue:{value:"'key'"},description:"Whether the text or key of the selected item is submitted as part of an HTML form.\nWhen `allowsCustomValue` is `true`, this option does not apply and the text is always submitted.",name:"formValue",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"key"'}]}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: ComboBoxRenderProps) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: ComboBoxRenderProps) => CSSProperties)"}}}}}catch{}try{t.displayName="ComboBoxItem",t.__docgenInfo={description:"",displayName:"ComboBoxItem",props:{value:{defaultValue:null,description:"The object value that this item represents. When using dynamic collections, this is set automatically.",name:"value",required:!1,type:{name:"object"}},textValue:{defaultValue:null,description:"A string representation of the item's contents, used for features like typeahead.",name:"textValue",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: ListBoxItemRenderProps) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: ListBoxItemRenderProps) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: ListBoxItemRenderProps) => CSSProperties)"}},href:{defaultValue:null,description:"A URL to link to. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#href).",name:"href",required:!1,type:{name:"string"}},target:{defaultValue:null,description:"The target window for the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target).",name:"target",required:!1,type:{name:"HTMLAttributeAnchorTarget"}},rel:{defaultValue:null,description:"The relationship between the linked resource and the current page. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel).",name:"rel",required:!1,type:{name:"string"}},download:{defaultValue:null,description:"Causes the browser to download the linked URL. A string may be provided to suggest a file name. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#download).",name:"download",required:!1,type:{name:"string | boolean"}},ping:{defaultValue:null,description:"A space-separated list of URLs to ping when the link is followed. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#ping).",name:"ping",required:!1,type:{name:"string"}},referrerPolicy:{defaultValue:null,description:"How much of the referrer to send when following the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#referrerpolicy).",name:"referrerPolicy",required:!1,type:{name:"enum",value:[{value:'""'},{value:'"no-referrer"'},{value:'"no-referrer-when-downgrade"'},{value:'"origin"'},{value:'"origin-when-cross-origin"'},{value:'"same-origin"'},{value:'"strict-origin"'},{value:'"strict-origin-when-cross-origin"'},{value:'"unsafe-url"'}]}}}}}catch{}try{d.displayName="ComboBoxSection",d.__docgenInfo={description:"",displayName:"ComboBoxSection",props:{title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"The object value that this section represents. When using dynamic collections, this is set automatically.",name:"value",required:!1,type:{name:"object"}},children:{defaultValue:null,description:"Static child items or a function to render children.",name:"children",required:!1,type:{name:"ReactNode | ((item: T) => ReactElement<any, string | JSXElementConstructor<any>>)"}},dependencies:{defaultValue:null,description:"Values that should invalidate the item cache when using dynamic collections.",name:"dependencies",required:!1,type:{name:"any[]"}},items:{defaultValue:null,description:"Item objects in the section.",name:"items",required:!1,type:{name:"Iterable<T>"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element.",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element.",name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}const Y={component:s,parameters:{layout:"centered"},tags:["autodocs"],args:{label:"Ice cream flavor"}},n=a=>o(s,{...a,children:[e(t,{children:"Chocolate"}),e(t,{id:"mint",children:"Mint"}),e(t,{children:"Strawberry"}),e(t,{children:"Vanilla"})]}),l=a=>e(n,{...a});l.args={disabledKeys:["mint"]};const r=a=>o(s,{...a,children:[o(d,{title:"Fruit",children:[e(t,{id:"Apple",children:"Apple"}),e(t,{id:"Banana",children:"Banana"}),e(t,{id:"Orange",children:"Orange"}),e(t,{id:"Honeydew",children:"Honeydew"}),e(t,{id:"Grapes",children:"Grapes"}),e(t,{id:"Watermelon",children:"Watermelon"}),e(t,{id:"Cantaloupe",children:"Cantaloupe"}),e(t,{id:"Pear",children:"Pear"})]}),o(d,{title:"Vegetable",children:[e(t,{id:"Cabbage",children:"Cabbage"}),e(t,{id:"Broccoli",children:"Broccoli"}),e(t,{id:"Carrots",children:"Carrots"}),e(t,{id:"Lettuce",children:"Lettuce"}),e(t,{id:"Spinach",children:"Spinach"}),e(t,{id:"Bok Choy",children:"Bok Choy"}),e(t,{id:"Cauliflower",children:"Cauliflower"}),e(t,{id:"Potatoes",children:"Potatoes"})]})]});r.args={label:"Preferred fruit or vegetable"};const i=a=>o(_,{className:"flex flex-col gap-2 items-start",children:[e(n,{...a}),e(V,{type:"submit",variant:"secondary",children:"Submit"})]});i.args={isRequired:!0};var c,p,h;n.parameters={...n.parameters,docs:{...(c=n.parameters)==null?void 0:c.docs,source:{originalSource:`(args: any) => <ComboBox {...args}>
    <ComboBoxItem>Chocolate</ComboBoxItem>
    <ComboBoxItem id="mint">Mint</ComboBoxItem>
    <ComboBoxItem>Strawberry</ComboBoxItem>
    <ComboBoxItem>Vanilla</ComboBoxItem>
  </ComboBox>`,...(h=(p=n.parameters)==null?void 0:p.docs)==null?void 0:h.source}}};var f,b,y;l.parameters={...l.parameters,docs:{...(f=l.parameters)==null?void 0:f.docs,source:{originalSource:"(args: any) => <Example {...args} />",...(y=(b=l.parameters)==null?void 0:b.docs)==null?void 0:y.source}}};var g,C,v;r.parameters={...r.parameters,docs:{...(g=r.parameters)==null?void 0:g.docs,source:{originalSource:`(args: any) => <ComboBox {...args}>
    <ComboBoxSection title="Fruit">
      <ComboBoxItem id="Apple">Apple</ComboBoxItem>
      <ComboBoxItem id="Banana">Banana</ComboBoxItem>
      <ComboBoxItem id="Orange">Orange</ComboBoxItem>
      <ComboBoxItem id="Honeydew">Honeydew</ComboBoxItem>
      <ComboBoxItem id="Grapes">Grapes</ComboBoxItem>
      <ComboBoxItem id="Watermelon">Watermelon</ComboBoxItem>
      <ComboBoxItem id="Cantaloupe">Cantaloupe</ComboBoxItem>
      <ComboBoxItem id="Pear">Pear</ComboBoxItem>
    </ComboBoxSection>
    <ComboBoxSection title="Vegetable">
      <ComboBoxItem id="Cabbage">Cabbage</ComboBoxItem>
      <ComboBoxItem id="Broccoli">Broccoli</ComboBoxItem>
      <ComboBoxItem id="Carrots">Carrots</ComboBoxItem>
      <ComboBoxItem id="Lettuce">Lettuce</ComboBoxItem>
      <ComboBoxItem id="Spinach">Spinach</ComboBoxItem>
      <ComboBoxItem id="Bok Choy">Bok Choy</ComboBoxItem>
      <ComboBoxItem id="Cauliflower">Cauliflower</ComboBoxItem>
      <ComboBoxItem id="Potatoes">Potatoes</ComboBoxItem>
    </ComboBoxSection>
    </ComboBox>`,...(v=(C=r.parameters)==null?void 0:C.docs)==null?void 0:v.source}}};var x,B,I;i.parameters={...i.parameters,docs:{...(x=i.parameters)==null?void 0:x.docs,source:{originalSource:`(args: any) => <Form className="flex flex-col gap-2 items-start">
    <Example {...args} />
    <Button type="submit" variant="secondary">Submit</Button>
  </Form>`,...(I=(B=i.parameters)==null?void 0:B.docs)==null?void 0:I.source}}};const Z=["Example","DisabledItems","Sections","Validation"];export{l as DisabledItems,n as Example,r as Sections,i as Validation,Z as __namedExportsOrder,Y as default};
