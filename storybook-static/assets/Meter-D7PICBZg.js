import{j as e}from"./jsx-runtime-Du8NFWEI.js";import{a7 as s}from"./index-CKGhC0Va.js";import{L as o}from"./Field-COFLQSMM.js";import{c as i}from"./utils-D1ukYlRK.js";import{c as d}from"./createLucideIcon-Dov-y89W.js";const u=d("AlertTriangle",[["path",{d:"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z",key:"c3ski4"}],["path",{d:"M12 9v4",key:"juzpu7"}],["path",{d:"M12 17h.01",key:"p32p05"}]]);function r({label:a,...l}){return e.jsx(s,{...l,className:i(l.className,"flex flex-col gap-1"),children:({percentage:t,valueText:n})=>e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"flex justify-between gap-2",children:[e.jsx(o,{children:a}),e.jsxs("span",{className:`text-sm ${t>=80?"text-red-600 dark:text-red-500":"text-gray-600 dark:text-zinc-400"}`,children:[t>=80&&e.jsx(u,{"aria-label":"Alert",className:"inline-block h-4 w-4 align-text-bottom"})," "+n]})]}),e.jsx("div",{className:"relative h-2 w-64 rounded-full bg-gray-300 outline outline-1 -outline-offset-1 outline-transparent dark:bg-zinc-700",children:e.jsx("div",{className:`absolute left-0 top-0 h-full rounded-full ${m(t)} forced-colors:bg-[Highlight]`,style:{width:t+"%"}})})]})})}function m(a){return a<70?"bg-green-600":a<80?"bg-orange-500":"bg-red-600"}try{r.displayName="Meter",r.__docgenInfo={description:"",displayName:"Meter",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},formatOptions:{defaultValue:{value:"{style: 'percent'}"},description:"The display format of the value label.",name:"formatOptions",required:!1,type:{name:"NumberFormatOptions"}},valueLabel:{defaultValue:null,description:"The content to display as the value's label (e.g. 1 of 4).",name:"valueLabel",required:!1,type:{name:"ReactNode"}},value:{defaultValue:{value:"0"},description:"The current value (controlled).",name:"value",required:!1,type:{name:"number"}},minValue:{defaultValue:{value:"0"},description:"The smallest value allowed for the input.",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:{value:"100"},description:"The largest value allowed for the input.",name:"maxValue",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: MeterRenderProps) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: MeterRenderProps) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: MeterRenderProps) => CSSProperties)"}}}}}catch{}export{r as M};
