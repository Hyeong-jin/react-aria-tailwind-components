import{j as e,P as c,l as p,a as n,F as f}from"./utils-2ykXyvw8.js";import{L as h}from"./Field-CfDsOgd5.js";import"./index-CBqU2yxZ.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-BtM5VmRH.js";function l({label:t,...r}){return e(c,{...r,className:p(r.className,"flex flex-col gap-1"),children:({percentage:u,valueText:m,isIndeterminate:s})=>n(f,{children:[n("div",{className:"flex justify-between gap-2",children:[e(h,{children:t}),e("span",{className:"text-sm text-gray-600 dark:text-zinc-400",children:m})]}),e("div",{className:"w-64 h-2 rounded-full bg-gray-300 dark:bg-zinc-700 outline outline-1 -outline-offset-1 outline-transparent relative overflow-hidden",children:e("div",{className:`absolute top-0 h-full rounded-full bg-blue-600 dark:bg-blue-500 forced-colors:bg-[Highlight] ${s?"left-full animate-in duration-1000 [--tw-enter-translate-x:calc(-16rem-100%)] slide-out-to-right-full repeat-infinite ease-out":"left-0"}`,style:{width:(s?40:u)+"%"}})})]})})}try{l.displayName="ProgressBar",l.__docgenInfo={description:"",displayName:"ProgressBar",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},formatOptions:{defaultValue:{value:"{style: 'percent'}"},description:"The display format of the value label.",name:"formatOptions",required:!1,type:{name:"NumberFormatOptions"}},valueLabel:{defaultValue:null,description:"The content to display as the value's label (e.g. 1 of 4).",name:"valueLabel",required:!1,type:{name:"ReactNode"}},value:{defaultValue:{value:"0"},description:"The current value (controlled).",name:"value",required:!1,type:{name:"number"}},minValue:{defaultValue:{value:"0"},description:"The smallest value allowed for the input.",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:{value:"100"},description:"The largest value allowed for the input.",name:"maxValue",required:!1,type:{name:"number"}},isIndeterminate:{defaultValue:null,description:"Whether presentation is indeterminate when progress isn't known.",name:"isIndeterminate",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: ProgressBarRenderProps) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: ProgressBarRenderProps) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: ProgressBarRenderProps) => CSSProperties)"}}}}}catch{}const N={component:l,parameters:{layout:"centered"},tags:["autodocs"]},a=t=>e(l,{...t});a.args={label:"Loadingâ€¦",value:80};var o,i,d;a.parameters={...a.parameters,docs:{...(o=a.parameters)==null?void 0:o.docs,source:{originalSource:"(args: any) => <ProgressBar {...args} />",...(d=(i=a.parameters)==null?void 0:i.docs)==null?void 0:d.source}}};const P=["Example"];export{a as Example,P as __namedExportsOrder,N as default};
