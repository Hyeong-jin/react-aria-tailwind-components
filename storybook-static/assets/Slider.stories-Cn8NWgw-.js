import{i as f,f as h,a as u,_ as g,l as b,j as e,a0 as y,a1 as v,F as x,a2 as V}from"./utils-2ykXyvw8.js";import{L as S}from"./Field-CfDsOgd5.js";import"./index-CBqU2yxZ.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-BtM5VmRH.js";const T=f({base:"rounded-full",variants:{orientation:{horizontal:"w-full h-[6px]",vertical:"h-full w-[6px] ml-[50%] -translate-x-[50%]"},isDisabled:{false:"bg-gray-300 dark:bg-zinc-500 forced-colors:bg-[ButtonBorder]",true:"bg-gray-100 dark:bg-zinc-800 forced-colors:bg-[GrayText]"}}}),q=f({extend:h,base:"w-6 h-6 outline-offset-2 group-orientation-horizontal:mt-6 group-orientation-vertical:ml-3 rounded-full bg-gray-50 dark:bg-zinc-900 border-2 border-gray-700 dark:border-gray-300",variants:{isDragging:{true:"bg-gray-700 dark:bg-gray-300 forced-colors:bg-[ButtonBorder]"},isDisabled:{true:"border-gray-300 dark:border-zinc-700 forced-colors:border-[GrayText]"}}});function l({label:r,thumbLabels:n,...i}){return u(g,{...i,className:b(i.className,"orientation-horizontal:grid orientation-vertical:flex grid-cols-[1fr_auto] flex-col items-center gap-2 orientation-horizontal:w-64"),children:[e(S,{children:r}),e(y,{className:"text-sm text-gray-500 dark:text-zinc-400 font-medium orientation-vertical:hidden",children:({state:t})=>t.values.map((s,d)=>t.getThumbValueLabel(d)).join(" â€“ ")}),e(v,{className:"group col-span-2 orientation-horizontal:h-6 orientation-vertical:w-6 orientation-vertical:h-64 flex items-center",children:({state:t,...s})=>u(x,{children:[e("div",{className:T(s)}),t.values.map((d,o)=>e(V,{index:o,"aria-label":n==null?void 0:n[o],className:q},o))]})})]})}try{l.displayName="Slider",l.__docgenInfo={description:"",displayName:"Slider",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},thumbLabels:{defaultValue:null,description:"",name:"thumbLabels",required:!1,type:{name:"string[]"}},formatOptions:{defaultValue:null,description:"The display format of the value label.",name:"formatOptions",required:!1,type:{name:"NumberFormatOptions"}},value:{defaultValue:null,description:"The current value (controlled).",name:"value",required:!1,type:{name:"number | number[]"}},minValue:{defaultValue:{value:"0"},description:"The slider's minimum value.",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:{value:"100"},description:"The slider's maximum value.",name:"maxValue",required:!1,type:{name:"number"}},isDisabled:{defaultValue:null,description:"Whether the whole Slider is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"The default value (uncontrolled).",name:"defaultValue",required:!1,type:{name:"number | number[]"}},onChange:{defaultValue:null,description:"Handler that is called when the value changes.",name:"onChange",required:!1,type:{name:"(value: T) => void"}},orientation:{defaultValue:{value:"'horizontal'"},description:"The orientation of the Slider.",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},step:{defaultValue:{value:"1"},description:"The slider's step value.",name:"step",required:!1,type:{name:"number"}},onChangeEnd:{defaultValue:null,description:"Fired when the slider stops moving, due to being let go.",name:"onChangeEnd",required:!1,type:{name:"(value: T) => void"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: SliderRenderProps) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: SliderRenderProps) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: SliderRenderProps) => CSSProperties)"}}}}}catch{}const k={component:l,parameters:{layout:"centered"},tags:["autodocs"]},a=r=>e(l,{...r});a.args={label:"Range",defaultValue:[30,60],thumbLabels:["start","end"]};var m,c,p;a.parameters={...a.parameters,docs:{...(m=a.parameters)==null?void 0:m.docs,source:{originalSource:"(args: any) => <Slider {...args} />",...(p=(c=a.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const P=["Example"];export{a as Example,P as __namedExportsOrder,k as default};
