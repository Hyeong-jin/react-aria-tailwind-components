import{j as o}from"./jsx-runtime-Du8NFWEI.js";import{i as r,p as s,af as i,e as c}from"./index-CKGhC0Va.js";const d=r({base:"bg-gray-300 dark:bg-zinc-600 forced-colors:bg-[ButtonBorder]",variants:{orientation:{horizontal:"h-px w-full",vertical:"w-px"}},defaultVariants:{orientation:"horizontal"}});function a(e){return o.jsx(s,{...e,className:d({orientation:e.orientation,className:e.className})})}try{a.displayName="Separator",a.__docgenInfo={description:"",displayName:"Separator",props:{orientation:{defaultValue:{value:"'horizontal'"},description:"The orientation of the separator.",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},elementType:{defaultValue:null,description:"The HTML element type that will be used to render the separator.",name:"elementType",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element.",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element.",name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}const p=r({base:"flex gap-2",variants:{orientation:{horizontal:"flex-row",vertical:"flex-col items-start"}}});function t(e){return o.jsx(i,{...e,className:c(e.className,(l,n)=>p({...n,className:l}))})}try{t.displayName="Toolbar",t.__docgenInfo={description:"",displayName:"Toolbar",props:{orientation:{defaultValue:{value:"'horizontal'"},description:"The orientation of the entire toolbar.",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: ToolbarRenderProps) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: ToolbarRenderProps) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: ToolbarRenderProps) => CSSProperties)"}}}}}catch{}export{a as S,t as T};
